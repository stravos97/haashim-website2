---
import { cvData, cvUtils } from '../data';

const { personal, skills, experience, projects, education, certifications } = cvData;

// Select top experiences and projects for 2-page limit
const topExperiences = experience.slice(0, 4);
const topProjects = projects.slice(0, 5);
const earnedCerts = cvUtils.getEarnedCertifications();
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{personal.name} - CV</title>
  <style>
    /* Precise A4 page setup for exactly 2 pages */
    @page {
      size: A4;
      margin: 12mm 15mm 12mm 15mm;
    }

    @page:first {
      margin-top: 10mm;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      -webkit-print-color-adjust: exact;
      print-color-adjust: exact;
    }

    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;
      font-size: 9.5pt;
      line-height: 1.35;
      color: #000;
      background: white;
    }

    .container {
      max-width: 100%;
    }

    /* Header Section - Optimized for space */
    .header {
      border-bottom: 1.5pt solid #1d70b8;
      padding-bottom: 8pt;
      margin-bottom: 8pt;
    }

    h1 {
      font-size: 20pt;
      font-weight: 700;
      margin-bottom: 2pt;
      letter-spacing: -0.3pt;
    }

    .title {
      font-size: 12pt;
      color: #2a2a2a;
      margin-bottom: 4pt;
      font-weight: 600;
    }

    .summary {
      font-size: 9pt;
      line-height: 1.35;
      color: #1a1a1a;
      margin-bottom: 5pt;
      text-align: justify;
      hyphens: auto;
    }

    .contact {
      font-size: 8.5pt;
      display: flex;
      gap: 12pt;
      flex-wrap: wrap;
    }

    .contact span {
      white-space: nowrap;
    }

    .contact a {
      color: #000;
      text-decoration: none;
    }

    /* Section Headers - Compact but clear */
    h2 {
      font-size: 11.5pt;
      font-weight: 700;
      margin-top: 10pt;
      margin-bottom: 5pt;
      padding-bottom: 1.5pt;
      border-bottom: 0.75pt solid #666;
      text-transform: uppercase;
      letter-spacing: 0.3pt;
      color: #0b0c0c;
    }

    /* Experience & Projects - Space optimized */
    .item {
      margin-bottom: 7pt;
      page-break-inside: avoid;
    }

    h3 {
      font-size: 10.5pt;
      font-weight: 700;
      margin-bottom: 0.5pt;
      color: #0b0c0c;
    }

    .company, .subtitle {
      font-size: 9.5pt;
      color: #2a2a2a;
      font-weight: 600;
      margin-bottom: 0.5pt;
    }

    .period {
      font-size: 8.5pt;
      color: #555;
      margin-bottom: 2pt;
      font-style: italic;
    }

    ul {
      margin-left: 13pt;
      margin-top: 2pt;
    }

    li {
      font-size: 8.5pt;
      line-height: 1.25;
      margin-bottom: 1.5pt;
      text-align: justify;
    }

    /* Skills Section - Ultra Compact Grid */
    .skills-container {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 6pt 10pt;
      margin-top: 4pt;
    }

    .skill-category {
      margin-bottom: 4pt;
    }

    .skill-category h4 {
      font-size: 9pt;
      font-weight: 700;
      margin-bottom: 2pt;
      color: #0b0c0c;
    }

    .skill-tags {
      font-size: 8pt;
      line-height: 1.3;
      color: #2a2a2a;
    }

    /* Education - Compact */
    .education-item {
      margin-bottom: 5pt;
      page-break-inside: avoid;
    }

    .degree {
      font-size: 10pt;
      font-weight: 700;
      margin-bottom: 0.5pt;
      color: #0b0c0c;
    }

    .institution {
      font-size: 9pt;
      color: #2a2a2a;
      margin-bottom: 0.5pt;
      font-weight: 600;
    }

    .edu-details {
      font-size: 8.5pt;
      color: #555;
      font-style: italic;
    }

    /* Projects - Compact */
    .projects-grid {
      margin-top: 4pt;
    }

    .project {
      margin-bottom: 7pt;
      page-break-inside: avoid;
    }

    .tech-stack {
      font-size: 8pt;
      color: #555;
      margin-bottom: 1.5pt;
      font-style: italic;
    }

    /* Page Management for exactly 2 pages */
    .page-1 {
      page-break-after: auto;
    }

    .page-2 {
      page-break-before: always;
    }

    /* Force page break after experience section */
    #experience-section {
      page-break-after: auto;
    }

    #skills-section {
      page-break-after: always;
      margin-bottom: 0;
    }

    /* Print-specific */
    @media print {
      body {
        width: 210mm;
        height: 297mm;
      }

      .no-print {
        display: none !important;
      }
    }

    /* Screen preview */
    @media screen {
      body {
        max-width: 210mm;
        margin: 0 auto;
        padding: 20px;
        background: #f5f5f5;
      }

      .container {
        background: white;
        padding: 15mm;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
      }

      .print-button {
        position: fixed;
        top: 20px;
        right: 20px;
        background: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 600;
        z-index: 1000;
      }

      .print-button:hover {
        background: #0056b3;
      }
    }
  </style>
</head>
<body>
  <button class="print-button no-print" onclick="window.print()">Print / Save as PDF</button>
  
  <div class="container">
    <!-- PAGE 1 -->
    <div class="page-1">
      <!-- Header -->
      <header class="header">
        <h1>{personal.name}</h1>
        <div class="title">{personal.title}</div>
        <div class="summary">
          Junior DevOps engineer with hands-on experience in cloud infrastructure, automation, and CI/CD. 
          Currently at Sparta Global developing enterprise DevOps skills through intensive training. 
          Experienced with Azure, Terraform, Kubernetes, Docker, and Jenkins from both training and previous roles.
        </div>
        <div class="contact">
          <span>ðŸ“§ {personal.contact.email}</span>
          <span>ðŸ’¼ {personal.contact.linkedin}</span>
          <span>ðŸ’» {personal.contact.github}</span>
        </div>
      </header>

      <!-- Experience Section -->
      <section id="experience-section">
        <h2>Professional Experience</h2>
        {topExperiences.map((exp, index) => (
          <div class="item">
            <h3>{exp.title}</h3>
            <div class="company">{exp.company}</div>
            <div class="period">{exp.period} â€¢ {exp.location}</div>
            <ul>
              {exp.points.slice(0, index === 0 ? 4 : index === 1 ? 3 : 2).map(point => (
                <li>{point}</li>
              ))}
            </ul>
          </div>
        ))}
      </section>

      <!-- Skills Section - Compact -->
      <section id="skills-section">
        <h2>Technical Skills</h2>
        <div class="skills-container">
          <div class="skill-category">
            <h4>Cloud & Infrastructure</h4>
            <div class="skill-tags">Azure â€¢ AWS â€¢ Terraform â€¢ ARM Templates â€¢ CloudFormation â€¢ IaC</div>
          </div>
          <div class="skill-category">
            <h4>Container & Orchestration</h4>
            <div class="skill-tags">Docker â€¢ Kubernetes â€¢ K3s â€¢ Helm â€¢ ArgoCD â€¢ GitOps</div>
          </div>
          <div class="skill-category">
            <h4>CI/CD & Automation</h4>
            <div class="skill-tags">Jenkins â€¢ GitHub Actions â€¢ Azure DevOps â€¢ Ansible â€¢ Bash â€¢ Python</div>
          </div>
          <div class="skill-category">
            <h4>Development & Tools</h4>
            <div class="skill-tags">Python â€¢ TypeScript â€¢ React â€¢ Git â€¢ Linux â€¢ Agile</div>
          </div>
        </div>
      </section>
    </div>

    <!-- PAGE 2 -->
    <div class="page-2">
      <!-- Key Projects -->
      <section>
        <h2>Key Projects</h2>
        <div class="projects-grid">
          {topProjects.map((project, index) => (
            <div class="project">
              <h3>{project.name}</h3>
              <div class="tech-stack">{project.techStack.slice(0, 3).join(' â€¢ ')}</div>
              <ul>
                {project.achievements.slice(0, index < 3 ? 2 : 1).map(achievement => (
                  <li>{achievement}</li>
                ))}
              </ul>
            </div>
          ))}
        </div>
      </section>

      <!-- Education -->
      <section>
        <h2>Education</h2>
        {education.map(edu => (
          <div class="education-item">
            <div class="degree">{edu.degree}</div>
            <div class="institution">{edu.institution}</div>
            <div class="edu-details">{edu.period} â€¢ {edu.grade}</div>
          </div>
        ))}
      </section>

      <!-- Certifications -->
      {earnedCerts.length > 0 && (
        <section>
          <h2>Certifications</h2>
          {earnedCerts.map(cert => (
            <div class="education-item">
              <div class="degree">{cert.name}</div>
              <div class="institution">{cert.issuer}</div>
              <div class="edu-details">
                {cert.date} 
                {cert.credentialId && ` â€¢ ID: ${cert.credentialId}`}
              </div>
            </div>
          ))}
        </section>
      )}

      <!-- Additional Info -->
      <section>
        <h2>Additional Information</h2>
        <ul>
          <li>Active GitHub contributor with {projects.length}+ repositories showcasing DevOps projects and automation tools</li>
          <li>Passionate about cloud-native technologies and continuously learning through hands-on projects</li>
          <li>Experience with security best practices, OWASP principles, and Zero Trust architecture</li>
          <li>Strong problem-solving skills developed through rock climbing and competitive badminton</li>
        </ul>
      </section>
    </div>
  </div>

  <script>
    // Auto-trigger print dialog when page loads
    window.addEventListener('load', () => {
      // Small delay to ensure styles are loaded
      setTimeout(() => {
        window.print();
      }, 100);
    });

    // Optional: Close window after printing if opened in new tab
    window.onafterprint = () => {
      if (window.opener) {
        window.close();
      }
    };
  </script>
</body>
</html>