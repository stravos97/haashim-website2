---
import Layout from '../layouts/Layout.astro';
import ProjectCard from '../components/ProjectCard.astro';
import ExperienceCard from '../components/ExperienceCard.astro';
import SkillSection from '../components/SkillSection.astro';
import { cvData } from '../data/cvData';

const { personal, skills, experience, projects, education, certifications } = cvData;
---

<Layout title={`${personal.name} - Portfolio`}>
  <main>
    <!-- Hero Section -->
    <header class="hero">
      <h1 class="hero-name">{personal.name}</h1>
      <p class="hero-title">{personal.title}</p>
      <p class="hero-summary">{personal.summary}</p>
      
      <div class="contact-links">
        <a href={`mailto:${personal.contact.email}`} aria-label="Email">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="2" y="4" width="20" height="16" rx="2"/>
            <path d="m22 7-10 5L2 7"/>
          </svg>
          <span>Email</span>
        </a>
        <a href={`tel:${personal.contact.phone.replace(/\s/g, '')}`} aria-label="Phone">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
          </svg>
          <span>Call</span>
        </a>
        <a href={`https://${personal.contact.linkedin}`} target="_blank" rel="noopener noreferrer" aria-label="LinkedIn">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
            <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
          </svg>
          <span>LinkedIn</span>
        </a>
        <a href={`https://${personal.contact.github}`} target="_blank" rel="noopener noreferrer" aria-label="GitHub">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
          <span>GitHub</span>
        </a>
        <a href={`https://${personal.contact.website}`} target="_blank" rel="noopener noreferrer" aria-label="Website">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"/>
            <line x1="2" y1="12" x2="22" y2="12"/>
            <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"/>
          </svg>
          <span>Website</span>
        </a>
      </div>
    </header>

    <!-- Navigation -->
    <nav class="nav-container" id="nav-container">
      <div class="nav-menu">
        <a href="#experience">Experience</a>
        <a href="#projects">Projects</a>
        <a href="#skills">Skills</a>
        <a href="#education">Education</a>
        <a href="#certifications">Certifications</a>
      </div>
    </nav>

    <!-- Experience Section -->
    <section id="experience">
      <h2>Professional Experience</h2>
      <div class="timeline">
        {experience.map((exp, index) => (
          <ExperienceCard experience={exp} index={index} />
        ))}
      </div>
    </section>

    <!-- Projects Section -->
    <section id="projects">
      <h2>Featured Projects</h2>
      <div class="projects-grid">
        {projects.map((project) => (
          <ProjectCard project={project} />
        ))}
      </div>
    </section>

    <!-- Skills Section -->
    <section id="skills">
      <h2>Technical Skills</h2>
      <div class="skills-grid">
        {Object.entries(skills).map(([category, skillList], index) => (
          <SkillSection category={category} skills={skillList} index={index} />
        ))}
      </div>
    </section>

    <!-- Education Section -->
    <section id="education">
      <h2>Education</h2>
      <div class="education-content">
        {education.map((edu) => (
          <div class="education-card">
            <h3>{edu.degree}</h3>
            <p class="institution">{edu.institution}</p>
            <div class="education-meta">
              <span class="date">{edu.period}</span>
              <span class="location">{edu.location}</span>
              {edu.grade && <span class="grade">{edu.grade}</span>}
            </div>
            {edu.modules && (
              <div class="modules">
                <h4>Key Modules:</h4>
                <ul>
                  {edu.modules.map((module) => (
                    <li>{module}</li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        ))}
      </div>
    </section>

    <!-- Certifications Section -->
    <section id="certifications">
      <h2>Certifications</h2>
      <div class="certifications-grid">
        {certifications.map((cert) => (
          <div class="certification-card">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="var(--color-primary)">
              <path d="M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2Z"/>
            </svg>
            <span>{cert}</span>
          </div>
        ))}
      </div>
    </section>

    <!-- Footer -->
    <footer>
      <p>Â© 2024 {personal.name}. Built with Astro & TypeScript.</p>
      <button class="print-button" onclick="window.print()">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="6 9 6 2 18 2 18 9"/>
          <path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"/>
          <rect x="6" y="14" width="12" height="8"/>
        </svg>
        Print CV
      </button>
    </footer>
  </main>
</Layout>

<style>
  /* Hero Section */
  .hero {
    text-align: center;
    margin-bottom: var(--spacing-3xl);
    padding: var(--spacing-3xl) var(--spacing-2xl);
    background: var(--color-gradient-hero);
    color: var(--color-text-inverse);
    border-radius: var(--radius-2xl);
    box-shadow: var(--shadow-2xl);
    position: relative;
    overflow: hidden;
    animation: heroEntrance 0.8s ease-out;
  }

  @keyframes heroEntrance {
    from {
      opacity: 0;
      transform: translateY(-30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .hero::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
    animation: heroRotate 30s linear infinite;
  }

  @keyframes heroRotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .hero-name {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 900;
    letter-spacing: -0.03em;
    margin-bottom: var(--spacing-sm);
    position: relative;
    z-index: 1;
    animation: fadeInUp 0.8s ease-out 0.2s both;
  }

  .hero-title {
    font-size: clamp(1rem, 2vw, 1.3rem);
    font-weight: 500;
    letter-spacing: 0.05em;
    opacity: 0.95;
    margin-bottom: var(--spacing-lg);
    animation: fadeInUp 0.8s ease-out 0.4s both;
  }

  .hero-summary {
    font-size: 1rem;
    line-height: 1.7;
    max-width: 800px;
    margin: 0 auto var(--spacing-xl) auto;
    opacity: 0.9;
    animation: fadeInUp 0.8s ease-out 0.6s both;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Contact Links */
  .contact-links {
    display: flex;
    justify-content: center;
    gap: var(--spacing-md);
    flex-wrap: wrap;
    animation: fadeInUp 0.8s ease-out 0.8s both;
  }

  .contact-links a {
    color: var(--color-text-inverse);
    text-decoration: none;
    padding: var(--spacing-sm) var(--spacing-lg);
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: var(--radius-full);
    font-weight: 500;
    transition: all var(--transition-base);
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-sm);
    position: relative;
    overflow: hidden;
  }

  .contact-links a::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width var(--transition-slow), height var(--transition-slow);
  }

  .contact-links a:hover::before {
    width: 100%;
    height: 100%;
  }

  .contact-links a:hover {
    background: rgba(255, 255, 255, 0.25);
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  /* Navigation */
  .nav-container {
    position: sticky;
    top: 0;
    z-index: 100;
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(20px);
    border-bottom: 1px solid var(--color-border);
    margin-bottom: var(--spacing-2xl);
    transition: all var(--transition-base);
  }

  [data-theme="dark"] .nav-container {
    background: rgba(15, 23, 42, 0.8);
  }

  .nav-menu {
    max-width: 1280px;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-md) var(--spacing-xl);
    overflow-x: auto;
    scrollbar-width: none;
  }

  .nav-menu::-webkit-scrollbar {
    display: none;
  }

  .nav-menu a {
    color: var(--color-text);
    text-decoration: none;
    padding: var(--spacing-sm) var(--spacing-lg);
    font-size: 0.9rem;
    font-weight: 500;
    white-space: nowrap;
    border-radius: var(--radius-full);
    transition: all var(--transition-base);
    position: relative;
  }

  .nav-menu a:hover {
    background: var(--color-bg-secondary);
    color: var(--color-primary);
  }

  /* Timeline */
  .timeline {
    position: relative;
    padding-left: var(--spacing-lg);
  }

  .timeline::before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 6px;
    width: 2px;
    background: linear-gradient(180deg, var(--color-primary) 0%, var(--color-secondary) 100%);
    border-radius: var(--radius-full);
  }

  /* Projects Grid */
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
    gap: var(--spacing-xl);
    margin-top: var(--spacing-xl);
  }

  /* Skills Grid */
  .skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--spacing-xl);
    margin-top: var(--spacing-xl);
  }

  /* Education Card */
  .education-card {
    background: var(--color-gradient-card);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    padding: var(--spacing-xl);
    transition: all var(--transition-base);
  }

  .education-card:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
  }

  .education-card h3 {
    color: var(--color-text);
    font-size: 1.3rem;
    margin-bottom: var(--spacing-sm);
  }

  .institution {
    color: var(--color-primary);
    font-size: 1.1rem;
    font-weight: 500;
    margin-bottom: var(--spacing-md);
  }

  .education-meta {
    display: flex;
    gap: var(--spacing-md);
    flex-wrap: wrap;
    margin-bottom: var(--spacing-lg);
  }

  .education-meta span {
    background: var(--color-bg-secondary);
    color: var(--color-text-tertiary);
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: var(--radius-full);
    font-size: 0.9rem;
  }

  .grade {
    background: var(--color-primary) !important;
    color: var(--color-text-inverse) !important;
  }

  .modules h4 {
    color: var(--color-text);
    font-size: 1rem;
    margin-bottom: var(--spacing-sm);
  }

  .modules ul {
    list-style: none;
    padding: 0;
  }

  .modules li {
    position: relative;
    padding-left: var(--spacing-lg);
    margin-bottom: var(--spacing-xs);
    color: var(--color-text-secondary);
  }

  .modules li::before {
    content: 'â¢';
    position: absolute;
    left: 0;
    color: var(--color-primary);
  }

  /* Certifications */
  .certifications-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--spacing-lg);
    margin-top: var(--spacing-xl);
  }

  .certification-card {
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
    padding: var(--spacing-lg);
    background: var(--color-gradient-card);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    transition: all var(--transition-base);
  }

  .certification-card:hover {
    box-shadow: var(--shadow-md);
    transform: translateX(4px);
    border-color: var(--color-primary-light);
  }

  .certification-card span {
    color: var(--color-text);
    font-weight: 500;
  }

  /* Footer */
  footer {
    text-align: center;
    margin-top: var(--spacing-3xl);
    padding: var(--spacing-2xl) 0;
    color: var(--color-text-secondary);
    font-size: 0.9rem;
    border-top: 1px solid var(--color-border);
  }

  .print-button {
    margin-top: var(--spacing-md);
    padding: var(--spacing-sm) var(--spacing-xl);
    background: var(--color-gradient-primary);
    color: var(--color-text-inverse);
    border: none;
    border-radius: var(--radius-full);
    cursor: pointer;
    font-family: var(--font-primary);
    font-weight: 600;
    font-size: 0.95rem;
    transition: all var(--transition-base);
    box-shadow: var(--shadow-md);
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-sm);
  }

  .print-button:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-xl);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .hero {
      padding: var(--spacing-2xl) var(--spacing-lg);
    }

    .hero-name {
      font-size: 2.2rem;
    }

    .projects-grid,
    .skills-grid {
      grid-template-columns: 1fr;
    }

    .nav-menu {
      padding: var(--spacing-sm) var(--spacing-md);
      gap: var(--spacing-xs);
    }

    .nav-menu a {
      padding: var(--spacing-xs) var(--spacing-md);
      font-size: 0.85rem;
    }
  }
</style>

<script>
  // Add scroll effect to navigation
  const navContainer = document.getElementById('nav-container');
  
  window.addEventListener('scroll', () => {
    if (navContainer) {
      if (window.scrollY > 100) {
        navContainer.style.boxShadow = 'var(--shadow-md)';
        navContainer.style.background = 'rgba(255, 255, 255, 0.95)';
      } else {
        navContainer.style.boxShadow = 'none';
        navContainer.style.background = 'rgba(255, 255, 255, 0.8)';
      }
    }
  });

  // Smooth scroll for navigation links
  document.querySelectorAll('.nav-menu a').forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();
      const targetId = link.getAttribute('href')?.substring(1);
      if (targetId) {
        const targetElement = document.getElementById(targetId);
        if (targetElement) {
          const offset = 80; // Account for sticky nav
          const targetPosition = targetElement.offsetTop - offset;
          window.scrollTo({
            top: targetPosition,
            behavior: 'smooth'
          });
        }
      }
    });
  });
</script>